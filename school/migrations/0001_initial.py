# Generated by Django 5.1 on 2024-12-04 12:03

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import shortuuid.main
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30)),
                ('author', models.CharField(max_length=64)),
                ('copies', models.IntegerField()),
                ('location', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=24)),
                ('nick_name', models.CharField(max_length=24)),
                ('category', models.CharField(max_length=24)),
            ],
            options={
                'db_table': 'class',
            },
        ),
        migrations.CreateModel(
            name='EntranceExamQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('options', models.JSONField(default=list)),
                ('answer', models.SmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='EntranceExamScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('applicant_id', models.CharField(max_length=10, unique=True)),
                ('value', models.SmallIntegerField()),
                ('percentage', models.SmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=64)),
                ('last_name', models.CharField(max_length=64)),
                ('contact_mail', models.EmailField(default=None, max_length=254)),
                ('address', models.TextField()),
                ('contact_phone', models.CharField(max_length=24)),
                ('emergency_phone', models.CharField(max_length=24)),
            ],
            options={
                'db_table': 'parent',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('teacher', 'Teacher'), ('student', 'Student')], max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BookPurchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_purchased', models.DateTimeField()),
                ('quantity', models.IntegerField()),
                ('unit_price', models.FloatField()),
                ('total_price', models.FloatField()),
                ('supplier', models.CharField(max_length=30)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchases', to='school.book')),
            ],
        ),
        migrations.CreateModel(
            name='Applicant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application_id', models.CharField(max_length=10, unique=True)),
                ('first_name', models.CharField(max_length=64)),
                ('last_name', models.CharField(max_length=64)),
                ('contact_mail', models.EmailField(default=None, max_length=254, unique=True)),
                ('address', models.TextField()),
                ('contact_phone', models.CharField(max_length=24)),
                ('parent_first_name', models.CharField(max_length=64)),
                ('parent_last_name', models.CharField(max_length=64)),
                ('parent_contact_mail', models.EmailField(default=None, max_length=254)),
                ('parent_address', models.TextField()),
                ('parent_contact_phone', models.CharField(max_length=24)),
                ('class_applied_for', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='applicants', to='school.class')),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64)),
                ('description', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='course_images/')),
                ('creator', models.CharField(max_length=64)),
                ('course_status', models.CharField(choices=[('O', 'Open'), ('W', 'Waitlisted')], default='O', max_length=1)),
                ('_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='school.class')),
            ],
        ),
        migrations.CreateModel(
            name='ClassSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('topic', models.CharField(max_length=64)),
                ('tutor', models.CharField(max_length=64)),
                ('lesson', models.CharField(default=None, max_length=30)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_schedules', to='school.course')),
            ],
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('category', models.CharField(max_length=20)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('obtainable_score', models.IntegerField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exams', to='school.course')),
            ],
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30)),
                ('estimated_time', models.SmallIntegerField(default=None)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modules', to='school.course')),
            ],
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30)),
                ('note', models.TextField()),
                ('has_unit_test', models.BooleanField(default=False)),
                ('unit_test', models.JSONField(blank=True, default=list)),
                ('has_video', models.BooleanField(default=False)),
                ('video', models.TextField()),
                ('date_created', models.DateField()),
                ('estimated_time', models.SmallIntegerField(default=None, null=True)),
                ('module', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='school.module')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=64)),
                ('last_name', models.CharField(max_length=64)),
                ('email', models.EmailField(default=None, max_length=254, unique=True)),
                ('password', models.CharField(default=None, max_length=64)),
                ('_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='school.class')),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='school.parent')),
            ],
            options={
                'db_table': 'student',
            },
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField()),
                ('date_submitted', models.DateField()),
                ('score_type', models.CharField(max_length=10)),
                ('assignment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assignment_scores', to='school.course')),
                ('exam', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='exam_scores', to='school.exam')),
                ('lesson', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='test_scores', to='school.lesson')),
                ('student', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='scores', to='school.student')),
            ],
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=64)),
                ('value', models.IntegerField()),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', to='school.student')),
            ],
        ),
        migrations.CreateModel(
            name='Checkout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_checked_out', models.DateTimeField()),
                ('days_requested', models.IntegerField()),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='checkouts', to='school.book')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='book_borrowed', to='school.student')),
            ],
        ),
        migrations.CreateModel(
            name='BookSale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_sold', models.DateTimeField()),
                ('quantity', models.IntegerField()),
                ('unit_price', models.FloatField()),
                ('total_price', models.FloatField()),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales', to='school.book')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='books', to='school.student')),
            ],
        ),
        migrations.CreateModel(
            name='StudentPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.FloatField()),
                ('paid', models.FloatField()),
                ('history', models.JSONField(default=list)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='school.student')),
            ],
        ),
        migrations.CreateModel(
            name='StudyGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('group_name', models.CharField(blank=True, default=shortuuid.main.ShortUUID.uuid, max_length=128)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_groups', to='school.student')),
                ('students', models.ManyToManyField(blank=True, related_name='study_groups', to='school.student')),
                ('students_online', models.ManyToManyField(blank=True, related_name='online_in_groups', to='school.student')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.student')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='school.studygroup')),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=64)),
                ('last_name', models.CharField(max_length=64)),
                ('subjects', models.JSONField(blank=True, default=list)),
                ('is_form_teacher', models.BooleanField(default=False)),
                ('email', models.EmailField(default=None, max_length=254, unique=True)),
                ('password', models.CharField(default=None, max_length=64, null=True)),
                ('_class', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='form_teacher', to='school.class')),
            ],
            options={
                'db_table': 'teacher',
            },
        ),
        migrations.CreateModel(
            name='UnitTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=30)),
                ('due_date', models.DateField()),
                ('due_time', models.TimeField()),
                ('obtainable_mark', models.IntegerField()),
                ('tota_obtainable_mark', models.IntegerField()),
                ('questions', models.JSONField(default=list)),
                ('module', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='tests', to='school.module')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=64)),
                ('amount', models.IntegerField()),
                ('_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='school.class')),
            ],
            options={
                'unique_together': {('type', '_class')},
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_marked', models.DateField()),
                ('status', models.CharField(max_length=7)),
                ('_class', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='school.class')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='school.student')),
            ],
            options={
                'unique_together': {('student', 'date_marked')},
            },
        ),
    ]
